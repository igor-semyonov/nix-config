# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usbhid"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/56836784-c98e-43b7-b349-1e125ff66fa7";
    fsType = "btrfs";
    options = ["subvol=@"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/56836784-c98e-43b7-b349-1e125ff66fa7";
    fsType = "btrfs";
    options = ["subvol=@home"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/56836784-c98e-43b7-b349-1e125ff66fa7";
    fsType = "btrfs";
    options = ["subvol=@nix"];
  };

  fileSystems."/mnt/btrfs-pool" = {
    device = "/dev/disk/by-uuid/56836784-c98e-43b7-b349-1e125ff66fa7";
    fsType = "btrfs";
    options = ["subvolid=5"];
  };

  fileSystems."/boot/efi" = {
    device = "/dev/disk/by-uuid/D203-132D";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  fileSystems."/mnt/ssd" = {
    device = "/dev/disk/by-uuid/16f331fb-188f-4362-8f28-00fbb333304a";
    fsType = "btrfs";
    options = ["subvolid=5"];
  };
  fileSystems."/data" = {
    device = "/dev/disk/by-uuid/16f331fb-188f-4362-8f28-00fbb333304a";
    fsType = "btrfs";
    options = ["subvol=@data"];
  };
  fileSystems."/mnt/ollama-models" = {
    device = "/dev/disk/by-uuid/16f331fb-188f-4362-8f28-00fbb333304a";
    fsType = "btrfs";
    options = ["subvol=@ollama-models"];
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-73ced3702a00.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2np1.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno3np0.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethf136b10.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
